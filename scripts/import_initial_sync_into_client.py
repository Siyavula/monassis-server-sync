'''
Set the client record data and hashes from a file generated by
export_initial_sync_from_server.py
'''
if __name__ == '__main__':
    import sys
    import cPickle
    from syncserver import record_database, utils

    # Load config and adjust for client side
    config_path = sys.argv[1]
    config = record_database.load_config_from_file(
        config_path, 'client', run_setup=True, sync_time=utils.now_utc())

    # Dump records and hashes to file for client and insert server hashes
    with open('export_initial_sync_from_server.pickle', 'rb') as fp:
        while True:
            try:
                struct = cPickle.load(fp)
            except EOFError:
                break
            record_database.insert_record(
                config, struct['section_name'], struct['record_id'], struct['record'])
            record_database.insert_hash(
                config, struct['section_name'], struct['record_id'], struct['hash'])
