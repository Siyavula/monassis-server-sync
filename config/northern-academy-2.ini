[sync:main]
name = northern-academy-2
url = http://10.26.0.37:5392
sections =
     templates, template_section, books, chapters, sections, shortcodes, schools, classes, users,
     user_profile, user_profile_general, member_services, user_class, user_school, responses,
     new_sections, new_section_hierarchy, curricula, concepts, concept_dependencies,
     concept_group_hierarchy, new_section_concept, template_new_section

[sync:setup]
school_uuid = '6e39cad6-6e90-411a-a632-29bed3f8fa30'
class_uuids = [row[0] for row in `{monassisdb}SELECT uuid FROM classes WHERE school_uuid = :school_uuid`]
client_user_uuids = [row[0] for row in `{emasdb}SELECT user_id FROM users`]
client_internal_user_ids = [row[0] for row in `{emasdb}SELECT internal_user_id FROM users`]
school_user_uuids = [row[0] for row in `{monassisdb}SELECT user_uuid FROM user_school WHERE school_uuid = :school_uuid`]
learner_and_teacher_uuids = [row[0] for row in `{monassisdb}SELECT user_uuid FROM user_class WHERE class_uuid IN (SELECT DISTINCT(uuid) FROM classes WHERE school_uuid = :school_uuid)`]
user_uuids = list(set(client_user_uuids + school_user_uuids + learner_and_teacher_uuids))
string_user_uuids = [str(user_uuid) for user_uuid in user_uuids]
a_month_ago = SYNC_TIME - datetime.timedelta(days=30)

[sync:teardown]

[database:monassisdb]
version = 1.8.0

[section:templates]
database = monassisdb
table = templates
id_column = uuid
hash_columns = zipdata, muesli
base64_encode = zipdata
merge = slave

[section:template_section]
database = monassisdb
table = template_section
id_column = template_uuid, section_type, section_uuid
hash_columns = template_uuid, section_type, section_uuid
merge = slave

[section:books]
database = monassisdb
table = books
id_column = uuid
hash_columns = subject, grade, title, curriculum
merge = slave

[section:chapters]
database = monassisdb
table = chapters
id_column = uuid
hash_columns = book_uuid, number, title, path, visible, active, shortcode
merge = slave

[section:sections]
database = monassisdb
table = sections
id_column = uuid
hash_columns = chapter_uuid, number, title, visible, shortcode
merge = slave

[section:shortcodes]
database = monassisdb
table = shortcodes
id_column = uuid
hash_columns = shortcode, section_type, section_uuid
merge = slave

[section:schools]
database = monassisdb
table = schools
id_column = uuid
hash_columns = name, code, curriculum, government_school, province
where = uuid == :school_uuid
merge = child

[section:classes]
database = monassisdb
table = classes
id_column = uuid
hash_columns = school_uuid, subject, grade, name
where = uuid.in_(:class_uuids)
merge = child

[section:users]
database = emasdb
table = users
id_column = user_id
hash_columns = password_method, password_salt, password_hash, last_login, role_id
where = user_id.in_(:user_uuids)
merge = child

[section:user_profile]
database = emasdb
table = user_profile
id_column = uuid
hash_columns = user_profile
where = uuid.in_(:string_user_uuids)
merge = child

[section:user_profile_general]
database = emasdb
table = user_profile_general
id_column = uuid
hash_columns = name, surname, username, email, telephone
where = uuid.in_(:string_user_uuids)
merge = child

[section:member_services]
database = emasdb
table = memberservices
id_column = memberservice_id
hash_columns = memberid, title, related_service_id, expiry_date, credits, service_type, zope_uid
where = memberid.in_(:string_user_uuids)
merge = child

[section:user_class]
database = monassisdb
table = user_class
id_column = user_uuid, class_uuid
hash_columns = user_uuid, class_uuid, role
where = user_uuid.in_(:user_uuids) & class_uuid.in_(:class_uuids)
merge = child

[section:user_school]
database = monassisdb
table = user_school
id_column = user_uuid, school_uuid
hash_columns = user_uuid, school_uuid
where = school_uuid == :school_uuid
merge = child

[section:responses]
database = monassisdb
table = responses
id_column = uuid
hash_columns = user_uuid, template_uuid, random_seed, timestamp, responses, correct, marks, durations
where = user_uuid.in_(:user_uuids)# & (timestamp >= :a_month_ago)
merge = child

[section:new_sections]
database = monassisdb
table = new_sections
id_column = uuid
hash_columns = number, title, visible, shortcode
merge = slave

[section:new_section_hierarchy]
database = monassisdb
table = new_section_hierarchy
id_column = parent_uuid, child_uuid
hash_columns = parent_uuid, child_uuid
merge = slave

[section:curricula]
database = monassisdb
table = curricula
id_column = uuid
hash_columns = curriculum_name, subject, section_root_uuid
merge = slave

[section:concepts]
database = monassisdb
table = concepts
id_column = uuid
hash_columns = type, label, identifier
merge = slave

[section:concept_dependencies]
database = monassisdb
table = concept_dependencies
id_column = from_uuid, to_uuid
hash_columns = from_uuid, to_uuid
merge = slave

[section:concept_group_hierarchy]
database = monassisdb
table = concept_group_hierarchy
id_column = parent_uuid, child_uuid
hash_columns = parent_uuid, child_uuid
merge = slave

[section:new_section_concept]
database = monassisdb
table = new_section_concept
id_column = section_uuid, concept_uuid
hash_columns = section_uuid, concept_uuid
merge = slave

[section:template_new_section]
database = monassisdb
table = template_new_section
id_column = template_uuid, section_uuid
hash_columns = template_uuid, section_uuid
merge = slave
