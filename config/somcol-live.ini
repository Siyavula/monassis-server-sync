[sync:main]
name = somcol-live
url = http://192.237.252.251:5392
sections =
	 templates, books, chapters, sections, shortcodes, template_section,
	 schools, classes, users, learner_class, teacher_class, user_school,
	 responses, new_sections, new_section_hierarchy, curricula, concepts,
	 concept_dependencies, concept_group_hierarchy, new_section_concept,
	 template_new_section

[sync:setup]
school_uuid = '5d32127f-885a-43ed-b233-ef401b56aaf2'
class_uuids = [row[0] for row in `{monassisdb}SELECT uuid FROM classes WHERE school_uuid = :school_uuid`]
client_user_uuids = [row[0] for row in `{client.monassisdb}SELECT uuid FROM users`]
school_user_uuids = [row[0] for row in `{monassisdb}SELECT user_uuid FROM user_school WHERE school_uuid = :school_uuid`]
learner_uuids = [row[0] for row in `{monassisdb}SELECT user_uuid FROM learner_class WHERE class_uuid IN (SELECT DISTINCT(uuid) FROM classes WHERE school_uuid = :school_uuid)`]
teacher_uuids = [row[0] for row in `{monassisdb}SELECT user_uuid FROM teacher_class WHERE class_uuid IN (SELECT DISTINCT(uuid) FROM classes WHERE school_uuid = :school_uuid)`]
user_uuids = list(set(client_user_uuids + school_user_uuids + learner_uuids + teacher_uuids))
a_month_ago = SYNC_TIME - datetime.timedelta(days=30)

[sync:teardown]

[database:monassisdb]
version = 1.7.0

[section:templates]
database = monassisdb
table = templates
id_column = uuid
hash_columns = zipdata, muesli
base64_encode = zipdata
merge = master

[section:template_section]
database = monassisdb
table = template_section
id_column = template_uuid, section_type, section_uuid
hash_columns = template_uuid, section_type, section_uuid
merge = master

[section:books]
database = monassisdb
table = books
id_column = uuid
hash_columns = subject, grade, title, curriculum
merge = master

[section:chapters]
database = monassisdb
table = chapters
id_column = uuid
hash_columns = book_uuid, number, title, path, visible, active, shortcode
merge = master

[section:sections]
database = monassisdb
table = sections
id_column = uuid
hash_columns = chapter_uuid, number, title, visible, shortcode
merge = master

[section:shortcodes]
database = monassisdb
table = shortcodes
id_column = uuid
hash_columns = shortcode, section_type, section_uuid
merge = master

[section:schools]
database = monassisdb
table = schools
id_column = uuid
hash_columns = name, code, curriculum, government_school, province
where = uuid == :school_uuid
merge = parent

[section:classes]
database = monassisdb
table = classes
id_column = uuid
hash_columns = school_uuid, subject, grade, name
where = uuid.in_(:class_uuids)
merge = parent

[section:users]
database = monassisdb
table = users
id_column = uuid
hash_columns = username, type, name, surname, email
where = uuid.in_(:user_uuids)
merge = parent

[section:learner_class]
database = monassisdb
table = learner_class
id_column = user_uuid, class_uuid
hash_columns = user_uuid, class_uuid
where = user_uuid.in_(:user_uuids) & class_uuid.in_(:class_uuids)
merge = parent

[section:teacher_class]
database = monassisdb
table = teacher_class
id_column = user_uuid, class_uuid
hash_columns = user_uuid, class_uuid
where = user_uuid.in_(:user_uuids) & class_uuid.in_(:class_uuids)
merge = parent

[section:user_school]
database = monassisdb
table = user_school
id_column = user_uuid, school_uuid
hash_columns = user_uuid, school_uuid
where = school_uuid == :school_uuid
merge = parent

[section:responses]
database = monassisdb
table = responses
id_column = uuid
hash_columns = user_uuid, template_uuid, random_seed, timestamp, responses, correct, marks, durations
where = user_uuid.in_(:user_uuids)# & (timestamp >= :a_month_ago)
merge = parent

[section:new_sections]
database = monassisdb
table = new_sections
id_column = uuid
hash_columns = number, title, visible, shortcode
merge = slave

[section:new_section_hierarchy]
database = monassisdb
table = new_section_hierarchy
id_column = parent_uuid, child_uuid
hash_columns = parent_uuid, child_uuid
merge = slave

[section:curricula]
database = monassisdb
table = curricula
id_column = uuid
hash_columns = curriculum_name, subject, section_root_uuid
merge = slave

[section:concepts]
database = monassisdb
table = concepts
id_column = uuid
hash_columns = type, label, identifier
merge = slave

[section:concept_dependencies]
database = monassisdb
table = concept_dependencies
id_column = from_uuid, to_uuid
hash_columns = from_uuid, to_uuid
merge = slave

[section:concept_group_hierarchy]
database = monassisdb
table = concept_group_hierarchy
id_column = parent_uuid, child_uuid
hash_columns = parent_uuid, child_uuid
merge = slave

[section:new_section_concept]
database = monassisdb
table = new_section_concept
id_column = section_uuid, concept_uuid
hash_columns = section_uuid, concept_uuid
merge = slave

[section:template_new_section]
database = monassisdb
table = template_new_section
id_column = template_uuid, section_uuid
hash_columns = template_uuid, section_uuid
merge = slave
